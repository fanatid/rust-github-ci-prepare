name: rust project preparation
author: Kirill Fomichev
description: Basic steps for Rust projects

runs:
  using: "composite"
  steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v10
      with:
        root-reserve-mb: 4096
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ./target
        key: v0001-${{ matrix.os }}-rust-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          v0001-${{ matrix.os }}-rust-${{ hashFiles('rust-toolchain.toml') }}

    - shell: bash
      run: |
        RUST_VERSION="$(grep -oP 'channel = "\K\d\.\d+\.\d+(?=")' rust-toolchain.toml)"
        echo "RUST_VERSION=$RUST_VERSION" >> "$GITHUB_ENV"

    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: nightly
        components: rustfmt

    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ env.RUST_VERSION }}
        components: clippy

    - shell: bash
      run: |
        cargo tree
        git checkout Cargo.lock
        cargo tree --frozen --offline

    - shell: bash
      run: cargo +nightly fmt --all -- --check
